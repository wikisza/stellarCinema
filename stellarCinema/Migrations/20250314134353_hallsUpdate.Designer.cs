// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using stellarCinema.Entities;

#nullable disable

namespace stellarCinema.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250314134353_hallsUpdate")]
    partial class hallsUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("stellarCinema.Entities.Hall", b =>
                {
                    b.Property<int>("IdHall")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdHall"));

                    b.Property<string>("HallName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.HasKey("IdHall");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("stellarCinema.Entities.Movie", b =>
                {
                    b.Property<int>("IdMovie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMovie"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MovieLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdMovie");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("stellarCinema.Entities.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPayment"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdPayment");

                    b.HasIndex("IdReservation")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("stellarCinema.Entities.Reservation", b =>
                {
                    b.Property<int>("IdReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdReservation"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdShowtime")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdReservation");

                    b.HasIndex("IdShowtime");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("stellarCinema.Entities.ReservationSeat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<int>("IdSeat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdReservation");

                    b.HasIndex("IdSeat");

                    b.ToTable("ReservationSeats");
                });

            modelBuilder.Entity("stellarCinema.Entities.Seat", b =>
                {
                    b.Property<int>("IdSeat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdSeat"));

                    b.Property<int>("IdHall")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdSeat");

                    b.HasIndex("IdHall");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("stellarCinema.Entities.Showtime", b =>
                {
                    b.Property<int>("IdShowtime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdShowtime"));

                    b.Property<int>("IdHall")
                        .HasColumnType("int");

                    b.Property<int>("IdMovie")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShowtimeDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdShowtime");

                    b.HasIndex("IdHall");

                    b.HasIndex("IdMovie");

                    b.ToTable("Showtimes");
                });

            modelBuilder.Entity("stellarCinema.Entities.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("stellarCinema.Entities.Payment", b =>
                {
                    b.HasOne("stellarCinema.Entities.Reservation", "Reservation")
                        .WithOne("Payment")
                        .HasForeignKey("stellarCinema.Entities.Payment", "IdReservation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("stellarCinema.Entities.Reservation", b =>
                {
                    b.HasOne("stellarCinema.Entities.Showtime", "Showtime")
                        .WithMany("Reservations")
                        .HasForeignKey("IdShowtime")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Showtime");
                });

            modelBuilder.Entity("stellarCinema.Entities.ReservationSeat", b =>
                {
                    b.HasOne("stellarCinema.Entities.Reservation", "Reservation")
                        .WithMany("ReservationSeats")
                        .HasForeignKey("IdReservation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stellarCinema.Entities.Seat", "Seat")
                        .WithMany("ReservationSeats")
                        .HasForeignKey("IdSeat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("stellarCinema.Entities.Seat", b =>
                {
                    b.HasOne("stellarCinema.Entities.Hall", "Hall")
                        .WithMany("Seats")
                        .HasForeignKey("IdHall")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("stellarCinema.Entities.Showtime", b =>
                {
                    b.HasOne("stellarCinema.Entities.Hall", "Hall")
                        .WithMany("Showtimes")
                        .HasForeignKey("IdHall")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stellarCinema.Entities.Movie", "Movie")
                        .WithMany("Showtimes")
                        .HasForeignKey("IdMovie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("stellarCinema.Entities.Hall", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("stellarCinema.Entities.Movie", b =>
                {
                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("stellarCinema.Entities.Reservation", b =>
                {
                    b.Navigation("Payment");

                    b.Navigation("ReservationSeats");
                });

            modelBuilder.Entity("stellarCinema.Entities.Seat", b =>
                {
                    b.Navigation("ReservationSeats");
                });

            modelBuilder.Entity("stellarCinema.Entities.Showtime", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
